# 앨버타의 자동차 번호판은 ABC-0123 (세 글자, 네 숫자)와 같이 두 부분으로 나누어져 있다.

# 좋은 번호판은 첫 번째 부분의 가치와 두 번째 부분의 가치의 차이가 100을 넘지 않는 번호판이다.

# 글자로 이루어진 첫 번째 부분의 가치는 글자를 26진법 수처럼 계산한다. (각 자리가 [A..Z]) 예를 들어, "ABC"의 가치는 28 (0×262 + 1×261 + 2×260)이 된다. "ABC-0123"은  |28 - 123| ≤ 100 이기 때문에, 좋은 번호판이다.

# 자동차 번호판이 주어졌을 때, 좋은 번호판인지 아닌지를 구하는 프로그램을 작성하시오.

# 첫째 줄에 번호판의 수 N (1 ≤ N ≤ 100)이 주어진다. 다음 N개 줄에는 자동차 번호판이 LLL-DDDD 형식으로 주어진다.

# 각각의 자동차 번호판에 대해서, 좋은 번호판이면 "nice"를, 아니면 "not nice"를 출력한다.

# 2
# ABC-0123
# AAA-9999
# nice
# not nice



T = int(input())
for i in range(T):
    a = list(input().split('-')) #번호판 문자와 숫자를 '-'를 기준으로 분리해서 리스트에 저장
    cnt_alpha = []
    for alpha in a[0]: #a[0]은 문자, 이를 각각 순회하면서 가치를 담을 리스트에 append
            cnt_alpha.append(int(ord(alpha) % 65))
    num = cnt_alpha[0]*26**2 + cnt_alpha[1]*26 + cnt_alpha[2] # 26진법으로 계산

    if num-int(a[1]) <= 100 and num-int(a[1]) >= -100: #값의 차가 -100~100 사이에 들어오면 nice 출력
        print('nice')
    else:
        print('not nice')
